{"version":3,"file":"static/js/387.9e57ccb0.chunk.js","mappings":"uQAEaA,E,QAAcC,EAAAA,GAAH,qE,SC8CxB,EA3CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEQC,EAAAA,EAAAA,IAAaJ,GAFrB,OAETK,EAFS,OAGfV,EAAWU,EAASC,SACpBT,GAAa,GAJE,gDAOfE,GAAS,GAPM,yDAAH,qDAUhBI,GACD,GAAE,CAACH,KAOF,gCACGF,IAAS,6EACTJ,EAAQa,OAAS,GAAKX,IAAcE,GACnC,wBACGJ,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACpB,EAAD,YACE,uBAAIkB,KACJ,uBAAIC,MAFYC,EADP,OAQf,yDAIP,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsItem = styled.li`\n  border: 2px solid;\n  padding: 20px 40px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'TakeApi';\nimport { ReviewsItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const responce = await fetchReviews(movieId);\n        setReviews(responce.results);\n        setIsLoading(true);\n        // console.log(responce.results);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  //   if (reviews.length === 0) {\n  //     return;\n  //   }\n\n  return (\n    <>\n      {error && <p>Ups! Something went wrong, try reloading the page</p>}\n      {reviews.length > 0 && isLoading && !error ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewsItem key={id}>\n              <b>{author}</b>\n              <p>{content}</p>\n            </ReviewsItem>\n          ))}\n        </ul>\n      ) : (\n        <p>'this film has not reviews'</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsItem","styled","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getReviews","fetchReviews","responce","results","length","map","author","content","id"],"sourceRoot":""}