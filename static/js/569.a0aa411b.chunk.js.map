{"version":3,"file":"static/js/569.a0aa411b.chunk.js","mappings":"yRAIMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,uQAgBHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,6BCzBYE,EAAUN,EAAAA,EAAAA,IAAH,2IASPO,EAAWP,EAAAA,EAAAA,IAAH,wGAORQ,EAAeR,EAAAA,EAAAA,IAAH,gIAQZS,GAAWT,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mPCiDrB,EA7DqB,WAAO,IAAD,IACzB,GAAgCU,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAa7C,IAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAQR,GAFf,OAEVS,EAFU,OAGhBV,EAAYU,GACZC,QAAQC,IAAIF,GAJI,yGAAH,qDAOjBF,GACD,GAAE,CAACP,IAEa,KAAbF,EAAJ,CAIA,IACEc,EAMEd,EANFc,YACAC,EAKEf,EALFe,eACAC,EAIEhB,EAJFgB,SACAC,EAGEjB,EAHFiB,aACAC,EAEElB,EAFFkB,OACAC,EACEnB,EADFmB,aAGIC,EAAYC,KAAKC,KAAoB,GAAfH,GACtBI,EAAcN,EAAaO,MAAM,KAAK,GAE5C,OACE,iCACE,SAACjC,EAAD,CAAUC,GAAIY,EAAd,4BACA,UAACT,EAAD,YACE,gBAAK8B,IAAG,UAvCG,mCAuCH,OAAkBX,GAAeY,IAAKX,KAC9C,UAACnB,EAAD,YACE,0BACGmB,EADH,IACoBQ,EADpB,QAGA,wCAAgBH,EAAhB,QACA,oCAAYJ,MACZ,mCACA,wBACGE,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,aAMlB,UAAC/B,EAAD,YACE,SAACC,EAAD,CAAUN,GAAG,OAAb,mBACA,SAACM,EAAD,CAAUN,GAAG,UAAb,yBAEF,SAAC,KAAD,MArCH,CAwCF,C","sources":["components/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-left: 50px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const Details = styled.div`\n  display: flex;\n  gap: 30px;\n  padding: 20px;\n  border: 2px solid;\n  border-radius: 10px;\n  margin: 0 30px;\n`;\n\nexport const InfoFilm = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 30px;\n`;\n\nexport const MoreInfoFilm = styled.div`\n  padding: 30px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 50px;\n`;\n\nexport const MoreLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 500;\n  border: 1px solid;\n  background-color: white;\n  border-radius: 4px;\n  padding: 10px 20px;\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: blue;\n  }\n`;\n","import { BackLink } from 'components/BackLink';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchId } from 'TakeApi';\nimport {\n  Details,\n  InfoFilm,\n  MoreInfoFilm,\n  MoreLink,\n} from './MovieDetails.styled';\n\nconst imgBaceUrl = 'https://image.tmdb.org/t/p/w400';\n\nconst MovieDetails = () => {\n  const [infoFilm, setInfoFilm] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getInfoFilm = async () => {\n      try {\n        const responce = await fetchId(movieId);\n        setInfoFilm(responce);\n        console.log(responce);\n      } catch (error) {}\n    };\n    getInfoFilm();\n  }, [movieId]);\n\n  if (infoFilm === '') {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    overview,\n    release_date,\n    genres,\n    vote_average,\n  } = infoFilm;\n\n  const userScore = Math.ceil(vote_average * 10);\n  const yearRelease = release_date.split('-')[0];\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back to Films</BackLink>\n      <Details>\n        <img src={`${imgBaceUrl}${poster_path}`} alt={original_title} />\n        <InfoFilm>\n          <h2>\n            {original_title}({yearRelease})\n          </h2>\n          <p>User score: {userScore}%</p>\n          <p>Owervies{overview}</p>\n          <b>Genres</b>\n          <ul>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </InfoFilm>\n      </Details>\n      <MoreInfoFilm>\n        <MoreLink to=\"cast\">Cast</MoreLink>\n        <MoreLink to=\"reviews\">Reviews</MoreLink>\n      </MoreInfoFilm>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Details","InfoFilm","MoreInfoFilm","MoreLink","useState","infoFilm","setInfoFilm","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getInfoFilm","fetchId","responce","console","log","poster_path","original_title","overview","release_date","genres","vote_average","userScore","Math","ceil","yearRelease","split","src","alt","map","id","name"],"sourceRoot":""}