{"version":3,"file":"static/js/736.fa735387.chunk.js","mappings":"uQAEaA,E,QAAUC,EAAAA,GAAH,mK,SCwDpB,EApDa,WACX,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACRH,GAAS,GACTF,GAAa,GACb,IAAMM,EAAO,mCAAG,8GAEWC,EAAAA,EAAAA,GAAUJ,GAFrB,OAENK,EAFM,OAGZV,EAAQU,EAASC,MACjBT,GAAa,GAJD,gDAOZE,GAAS,GAPG,yDAAH,qDAUbI,GACD,GAAE,CAACH,KAOF,gCACGF,IAAS,6EACTJ,EAAMa,OAAS,GAAKX,GACnB,SAACL,EAAD,UACGG,EAAMc,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAvB,OACT,0BACGD,GACC,gBAAKE,IAAG,UApCL,mCAoCK,OAAkBF,GAAgBG,IAAKJ,KAE/C,gBACEG,IAAI,4DACJC,IAAI,sBAGR,uBAAIJ,MATGE,EADA,OAeb,yEAIP,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastBox = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  margin-bottom: 40px;\n  gap: 20px;\n  padding: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'TakeApi';\nimport { CastBox } from './Cast.styled';\nconst imgBaceUrl = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const [casts, setCast] = useState('');\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setError(false);\n    setIsloading(false);\n    const getCast = async () => {\n      try {\n        const responce = await fetchCast(movieId);\n        setCast(responce.cast);\n        setIsloading(true);\n        // console.log(responce.cast);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  // if (casts.length === 0) {\n  //   return;\n  // }\n\n  return (\n    <>\n      {error && <p>Ups! Something went wrong, try reloading the page</p>}\n      {casts.length > 0 && isLoading ? (\n        <CastBox>\n          {casts.map(({ name, profile_path, id }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img src={`${imgBaceUrl}${profile_path}`} alt={name} />\n              ) : (\n                <img\n                  src=\"https://sd.keepcalms.com/i/keep-calm-poster-not-found.png\"\n                  alt=\"poster not found\"\n                />\n              )}\n              <p>{name}</p>\n            </li>\n          ))}\n        </CastBox>\n      ) : (\n        <p>Sorry. There is no information about actors</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastBox","styled","useState","casts","setCast","isLoading","setIsloading","error","setError","movieId","useParams","useEffect","getCast","fetchCast","responce","cast","length","map","name","profile_path","id","src","alt"],"sourceRoot":""}