{"version":3,"file":"static/js/257.5dba94b0.chunk.js","mappings":"0QAEaA,E,QAAYC,EAAAA,GAAH,4Q,SCETC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OADAC,QAAQC,IAAIJ,IAEV,8BACGA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMV,GAAlC,WACE,gBAAKW,IAAG,UAXD,mCAWC,OAAkBJ,GAAeK,IAAKP,KAC9C,wBAAKA,QAHOC,EADN,KAUjB,E,sCClBYO,EAAYhB,EAAAA,GAAAA,IAAH,ohBAsBTiB,EAAajB,EAAAA,GAAAA,KAAH,8KAUVkB,EAAmBlB,EAAAA,GAAAA,OAAH,gaAkBhBmB,EAAkBnB,EAAAA,GAAAA,MAAH,wLAWfoB,EAAWpB,EAAAA,GAAAA,GAAH,mKAORqB,EAAwBrB,EAAAA,GAAAA,KAAH,6MCQlC,EAhEe,WACb,OAAoCsB,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BT,EAAAA,EAAAA,WAAS,GAAnC,eAAOU,EAAP,KAAcC,EAAd,KAqBMC,EAAS,mCAAG,WAAMX,GAAN,iGAESY,EAAAA,EAAAA,IAAmBZ,GAF5B,OAERa,EAFQ,OAGdV,EAASU,EAASC,SAClBT,GAAa,GAJC,gDAMdK,GAAS,GANK,yDAAH,sDAUf,OACE,iCACE,SAACjB,EAAD,WACE,UAACC,EAAD,CAAYqB,SA3BG,SAAAC,GACnBA,EAAMC,iBAEoB,KAAtBjB,EAAWkB,QAIfV,EAA+B,KAAfR,EAAoB,CAAEmB,MAAOnB,GAAe,CAAC,GAE7DlB,QAAQC,IAAIwB,GACZI,EAAUX,GACVC,EAAc,KAPZnB,QAAQC,IAAI,0IAQf,EAeK,WACE,SAACa,EAAD,CACEwB,KAAK,OACLC,MAAOrB,EACPsB,KAAK,OACLC,YAAY,eACZC,SAtCgB,SAAAR,GACxB,IAAMS,EAAgBT,EAAMU,cAAcL,MAAMM,cAChD1B,EAAcwB,EACf,KAqCO,UAAC9B,EAAD,CAAkByB,KAAK,SAAvB,WACE,SAAC,MAAD,KACA,SAACtB,EAAD,8BAIN,UAACD,EAAD,WACGY,IAAS,wEACQ,IAAjBP,EAAM0B,SAAgB,0DACtB1B,EAAM0B,OAAS,GAAKxB,IAAcK,IACjC,SAAC/B,EAAD,CAAYC,OAAQuB,SAK7B,C","sources":["components/SearchList/SearchList.styled.jsx","components/SearchList/SearchList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieItem = styled.li`\n  border: 2px solid;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: white;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.07);\n    box-shadow: 5px 9px 20px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieItem } from './SearchList.styled';\nconst imgBaceUrl = 'https://image.tmdb.org/t/p/w400';\n\nexport const SearchList = ({ movies }) => {\n  const location = useLocation();\n\n  console.log(movies);\n  return (\n    <>\n      {movies.map(({ title, id, poster_path }) => (\n        <MovieItem key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            <img src={`${imgBaceUrl}${poster_path}`} alt={title} />\n            <h2>{title}</h2>\n          </Link>\n        </MovieItem>\n      ))}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchBar = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  /* top: 0;\n  left: 0; */\n  /* position: sticky; */\n  /* z-index: 1100; */\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  width: 600px;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  /* color: #fff; */\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SesrchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const MovieBox = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  margin-bottom: 40px;\n  gap: 20px;\n  padding: 30px;\n`;\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\n// .SearchFormButtonLabel {\n//\n// }\n\n// .SearchFormInput {\n// }\n\n// .SearchFormInput::placeholder {\n//   font: inherit;\n//   font-size: 18px;\n// }\n","import { SearchList } from 'components/SearchList/SearchList';\nimport { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchedMovie } from 'TakeApi';\nimport {\n  SearchBar,\n  SesrchForm,\n  SearchFormButton,\n  SearchFormInput,\n  MovieBox,\n  SearchFormButtonLabel,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchName, setSearchName] = useState('');\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(false);\n\n  const handleInputChange = event => {\n    const newSearchName = event.currentTarget.value.toLowerCase();\n    setSearchName(newSearchName);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchName.trim() === '') {\n      console.log('введите данные для поиска');\n      return;\n    }\n    setSearchParams(searchName !== '' ? { query: searchName } : {});\n    // const getParams = useParams.get(searchParams);\n    console.log(searchParams);\n    getMovies(searchName);\n    setSearchName('');\n  };\n\n  const getMovies = async searchName => {\n    try {\n      const responce = await fetchSearchedMovie(searchName);\n      setMovie(responce.results);\n      setIsLoading(true);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  return (\n    <>\n      <SearchBar>\n        <SesrchForm onSubmit={handleSubmit}>\n          <SearchFormInput\n            type=\"text\"\n            value={searchName}\n            name=\"name\"\n            placeholder=\"Search films\"\n            onChange={handleInputChange}\n          />\n          <SearchFormButton type=\"submit\">\n            <ImSearch />\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n          </SearchFormButton>\n        </SesrchForm>\n      </SearchBar>\n      <MovieBox>\n        {error && <p>Something went wrong, try reloading the page</p>}\n        {movie.length === 0 && <p>Nothing found for your request</p>}\n        {movie.length > 0 && isLoading && !error && (\n          <SearchList movies={movie} />\n        )}\n      </MovieBox>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieItem","styled","SearchList","movies","location","useLocation","console","log","map","title","id","poster_path","to","state","from","src","alt","SearchBar","SesrchForm","SearchFormButton","SearchFormInput","MovieBox","SearchFormButtonLabel","useState","searchName","setSearchName","movie","setMovie","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","error","setError","getMovies","fetchSearchedMovie","responce","results","onSubmit","event","preventDefault","trim","query","type","value","name","placeholder","onChange","newSearchName","currentTarget","toLowerCase","length"],"sourceRoot":""}